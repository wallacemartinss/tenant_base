networks:
  tenant:
    driver: bridge

services:
  # custom image
  app:
    build:
      args:
        user: wallace
        uid: 1000
      dockerfile: Dockerfile
    image: wallacemartinss
    working_dir: /var/www/
    volumes:
      - ./:/var/www/
    restart: unless-stopped
    depends_on:
      - redis
      - queue
      - mysql
    networks:
      - tenant
  
  #nginx
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - 80:80
    volumes:
      - ./:/var/www
      - ./docker/nginx/:/etc/nginx/conf.d/
    networks:
      - tenant

  # db
  mysql:
    image: mysql:8.0.27
    restart: always
    ports:
      - 3307:3306
    volumes:
      - ./.docker/mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      LANG: C.UTF-8
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - tenant

   # redis
  redis:
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      - tenant

  # Mailpit Container
  mailpit:
    image: axllent/mailpit:latest
    restart: on-failure
    tty: true
    ports:
      - 1025:1025 # SMTP server
      - 8025:8025 # Web UI
    networks:
      - tenant  

  # Queue Worker Container
  queue:
    image: wallacemartinss
    restart: always
    command: "php artisan queue:work"
    volumes:
      - ./:/var/www
    depends_on:
      - redis
    networks:
      - tenant 